[{"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\index.js":"1","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\App.js":"2","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reportWebVitals.js":"3","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\MainPage\\MainPage.js":"4","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\NavBar\\NavBar.js":"5","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\SubPage\\YoutubePlayer.js":"6","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\actions\\ActionTypes.js":"7","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reducer\\index.js":"8","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\actions\\index.js":"9","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reducer\\youtubePlayer.js":"10"},{"size":885,"mtime":1610485277898,"results":"11","hashOfConfig":"12"},{"size":635,"mtime":1611005854571,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606340403991,"results":"14","hashOfConfig":"12"},{"size":5659,"mtime":1610921935238,"results":"15","hashOfConfig":"12"},{"size":1622,"mtime":1609363143559,"results":"16","hashOfConfig":"12"},{"size":1955,"mtime":1611005275055,"results":"17","hashOfConfig":"12"},{"size":308,"mtime":1610403147243,"results":"18","hashOfConfig":"12"},{"size":180,"mtime":1610482815731,"results":"19","hashOfConfig":"12"},{"size":609,"mtime":1610916607369,"results":"20","hashOfConfig":"12"},{"size":1386,"mtime":1610570622439,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"v80k6c",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\index.js",[],["45","46"],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\App.js",[],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reportWebVitals.js",[],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\MainPage\\MainPage.js",["47","48","49","50","51"],"import React, { useState,useEffect } from 'react';\r\n\r\nimport {Input,Card,Row,Col} from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport WordCloud from 'react-d3-cloud';\r\n\r\nimport './MainPage.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport YoutubePlayer from '../SubPage/YoutubePlayer';\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actionTypes from \"../../actions\";\r\n\r\nconst {Search} = Input;\r\n\r\nconst MainPage = ({match}) =>{\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [Users,setUsers] = useState([])\r\n    const [YoutubeList,setYoutubeList] = useState([])\r\n    const [WordCloudList,setWordCloudList] = useState([]);    \r\n    // const dispatch = useDispatch();\r\n    // NavBar에서 전달된 값이 업데이트 될때만 searchYoutube 실행.\r\n    useEffect(()=>{\r\n\r\n        if(match.params.keyword !== undefined){\r\n            let data = {\r\n                keyword : match.params.keyword,\r\n                regionCode : navigator.language.substr(-2,2),\r\n            }\r\n            searchYoutube(data);\r\n            searchWord(data);\r\n        }\r\n\r\n    },[match.params.keyword])\r\n\r\n    const getUsers = (body) =>{\r\n        \r\n        console.log(`Get User List`);\r\n\r\n        axios.get('/api/users')\r\n        .then(response=>{\r\n            if(response.data.success){\r\n                if(response.data.userInfo){\r\n                    setUsers([...response.data.userInfo]);\r\n                    console.log(response.data.userInfo);\r\n                }\r\n                else{\r\n                    alert('사용자를 가져오는데 실패했습니다.');\r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    const getYoutubeList = (body) =>{\r\n        \r\n        axios.get('/api/youtube?keyword=youtube')\r\n        .then(response=>{\r\n            if(response.data.success){\r\n                console.log(response);\r\n            }\r\n        })\r\n    }\r\n\r\n    const searchYoutube = (data) =>{\r\n\r\n        data.keyword = data.keyword === undefined ? data : data.keyword;\r\n\r\n        console.log(`Input Keyword : ${data.keyword}`);\r\n\r\n        axios.get(`/api/youtube`,{\r\n            params:{\r\n                keyword : data.keyword,\r\n                regionCode : data.regionCode\r\n            }\r\n        }\r\n        )\r\n        .then(response=>{\r\n            if(response.data.success){\r\n                if(response.data.sendData.data.items){\r\n                    setYoutubeList([...response.data.sendData.data.items]);\r\n                    console.log(response.data.sendData.data.items);\r\n                }\r\n                else{\r\n                    console.log(`데이터를 찾아오지 못했습니다.`);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const transmitWord = (params) =>{\r\n        \r\n        let data = {\r\n            keyword : JSON.stringify(params.text).replaceAll('\"',''),\r\n            regionCode : navigator.language.substr(-2,2),\r\n        }\r\n        searchWord(data);\r\n        searchYoutube(data);\r\n    }\r\n\r\n    const searchWord = (data) =>{\r\n        \r\n          axios.get(`/api/trends`,{\r\n              params:{\r\n                  keyword :  data.keyword,\r\n                  regionCode :  data.regionCode,\r\n              }\r\n          })\r\n          .then(response=>{\r\n              if(response.data.success){\r\n                  if(response.data.sendData){\r\n                    console.log(response.data.sendData);\r\n                    setWordCloudList([...response.data.sendData]);\r\n                  }\r\n                  else{\r\n                      console.log(`데이터를 찾아오지 못했습니다.`);\r\n                  }\r\n              }\r\n          });\r\n    }\r\n\r\n    const renderCards = YoutubeList.map((List,index)=>{\r\n        \r\n        return (\r\n        <Col lg={6} md={8} xs={24} key={index}>\r\n            <Card\r\n                onClick={()=>{\r\n                    dispatch(actionTypes.startVideoPlayer(List.id,List.snippet.title));\r\n                }}\r\n            >\r\n                <img className=\"videoImg\" src={List.snippet.thumbnails.medium.url}></img>\r\n                <p><strong>Title : </strong>{List.snippet.title}</p>\r\n                <p><strong>Channel Title : </strong>{List.snippet.channelTitle}</p>\r\n                <p><strong>조회수 : </strong>{List.statistics.viewCount}</p>\r\n                <p><strong>좋아요 : </strong>{List.statistics.likeCount}</p>\r\n                <p><strong>댓글 : </strong>{List.statistics.commentCount}</p>\r\n            </Card>\r\n        </Col>\r\n        )\r\n\r\n    })\r\n\r\n    const fontSizeMapper = word => Math.log2(word.value)*15;\r\n    const rotate = word => word.value % 360;\r\n      \r\n    return(\r\n        \r\n        <div class=\"container\">\r\n            <div class=\"content\">\r\n                <Row>\r\n                    {renderCards}\r\n                </Row>\r\n            </div>\r\n            <div div class=\"sidebar\">\r\n                <Row>\r\n                    <Col>\r\n                        <WordCloud\r\n                            data = {WordCloudList}\r\n                            width  = \"400\"\r\n                            height = \"400\"\r\n                            padding = \"3\"\r\n                            fontSizeMapper = {fontSizeMapper}\r\n                            rotate = {rotate}\r\n                            onWordClick = {transmitWord}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <YoutubePlayer\r\n                            width = \"400\"\r\n                            height = \"400\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>            \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default MainPage;","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\NavBar\\NavBar.js",["52"],"\r\nimport React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Input} from 'antd';\r\nimport './NavBar.css';\r\n\r\n//const {Search} = Input;\r\n\r\nfunction NavBar(props){\r\n\r\n    let [keyword,setKeyword] =useState('');\r\n    \r\n    let keywordChange = (e) =>{\r\n        setKeyword(e.target.value);\r\n    }\r\n\r\n    let handleKeyPress = e =>{\r\n        \r\n        if(e.key === \"Enter\"){\r\n            if(e.target.value === '' || e.target.value === 'undefined'){\r\n                alert(\"채널명을 다시 입력해 주세요\");\r\n            }else{\r\n                setKeyword(e.target.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <nav className=\"menu\" style={{position:'fixed',zIndex:5,width:'100%'}}>\r\n            <div className=\"menu_logo\">\r\n                <a href=\"/\">Mr. You</a>\r\n            </div>\r\n            <div className=\"search_space\">\r\n                    <input type=\"text\" className = \"antd-input-space\" placeholder = \"채널명을 검색 가능합니다\" value = {keyword} onChange={keywordChange} onKeyPress={handleKeyPress}/>\r\n                    <Link to={`/${keyword}`}>\r\n                        <button>Search</button>\r\n                    </Link>\r\n                    {/* <Search \r\n                            className = \"antd-input-space\"\r\n                            placeholder = \"채널 또는 채널 설명을 검색 가능합니다.\"\r\n                            allowClear\r\n                            enterButton\r\n                            onChange={keywordChange}/> */}\r\n                \r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\views\\SubPage\\YoutubePlayer.js",["53"],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\actions\\ActionTypes.js",[],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reducer\\index.js",[],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\actions\\index.js",[],"D:\\Programming\\ReactJS Project\\toyProject\\Multinational-Yotube-Engine\\client\\src\\reducer\\youtubePlayer.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":16,"column":8,"nodeType":"60","messageId":"61","endLine":16,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":22,"column":12,"nodeType":"60","messageId":"61","endLine":22,"endColumn":17},{"ruleId":"58","severity":1,"message":"63","line":40,"column":11,"nodeType":"60","messageId":"61","endLine":40,"endColumn":19},{"ruleId":"58","severity":1,"message":"64","line":59,"column":11,"nodeType":"60","messageId":"61","endLine":59,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":135,"column":17,"nodeType":"67","endLine":135,"endColumn":84},{"ruleId":"58","severity":1,"message":"68","line":4,"column":9,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"69","line":5,"column":19,"nodeType":"60","messageId":"61","endLine":5,"endColumn":31},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Search' is assigned a value but never used.","Identifier","unusedVar","'Users' is assigned a value but never used.","'getUsers' is assigned a value but never used.","'getYoutubeList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Input' is defined but never used.","'ResizableBox' is defined but never used.","no-global-assign","no-unsafe-negation"]